CREATE TABLE IF NOT EXISTS users
(   id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name  VARCHAR(255) NOT NULL,
    email VARCHAR(512) NOT NULL,
    CONSTRAINT UQ_USER_EMAIL UNIQUE(email),
    CONSTRAINT pk_user PRIMARY KEY(id));

CREATE TABLE IF NOT EXISTS events
(   id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation  VARCHAR(2000) NOT NULL,
    category_id int,
    description VARCHAR(7000) NOT NULL,
    event_date timestamp,
    location_id int,
    paid BOOL,
    participant_limit int,
    request_moderation BOOL,
    title VARCHAR(120),
    initiator_id int,
    published_on VARCHAR(255),
    views int,
    confirmed_requests int,
    state_name VARCHAR(255),
    created_on VARCHAR(255),
    CONSTRAINT pk_event PRIMARY KEY(id));

CREATE TABLE IF NOT EXISTS locations
(   id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    lat float,
    lon float,
    CONSTRAINT pk_location PRIMARY KEY(id));

CREATE TABLE IF NOT EXISTS requests
(   id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created VARCHAR(255),
    event_id int,
    requester_id int,
    status VARCHAR(255),
    CONSTRAINT pk_request PRIMARY KEY(id));

CREATE TABLE IF NOT EXISTS categories
(   id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(120) unique,
    CONSTRAINT pk_categories PRIMARY KEY(id));

CREATE TABLE IF NOT EXISTS compilations
(   id BIGINT GENERATED ALWAYS AS IDENTITY NOT NULL,
    title VARCHAR(255),
    pinned BOOL,
    CONSTRAINT pk_compilations PRIMARY KEY(id));

CREATE TABLE IF NOT EXISTS sets
(   id BIGINT GENERATED ALWAYS AS IDENTITY NOT NULL,
    compilation_id int,
    event_id int,
    CONSTRAINT pk_sets PRIMARY KEY(id));


ALTER TABLE events ADD FOREIGN KEY (location_id) REFERENCES locations (id);
ALTER TABLE events ADD FOREIGN KEY (initiator_id) REFERENCES users (id);
ALTER TABLE events ADD FOREIGN KEY (category_id) REFERENCES categories (id);
ALTER TABLE requests ADD FOREIGN KEY (requester_id) REFERENCES users (id);
ALTER TABLE requests ADD FOREIGN KEY (event_id) REFERENCES events (id);
ALTER TABLE sets ADD FOREIGN KEY (event_id) REFERENCES events (id);
ALTER TABLE sets ADD FOREIGN KEY (compilation_id) REFERENCES compilations (id);

DELETE FROM sets CASCADE;
DELETE FROM compilations CASCADE;
DELETE FROM requests CASCADE;
DELETE FROM events CASCADE;
DELETE FROM users CASCADE;
DELETE FROM categories CASCADE;
DELETE FROM locations CASCADE;

ALTER TABLE sets ALTER COLUMN id RESTART WITH 1;
ALTER TABLE compilations ALTER COLUMN id RESTART WITH 1;
ALTER TABLE requests ALTER COLUMN id RESTART WITH 1;
ALTER TABLE users ALTER COLUMN id RESTART WITH 1;
ALTER TABLE events ALTER COLUMN id RESTART WITH 1;
ALTER TABLE locations ALTER COLUMN id RESTART WITH 1;
ALTER TABLE categories ALTER COLUMN id RESTART WITH 1;